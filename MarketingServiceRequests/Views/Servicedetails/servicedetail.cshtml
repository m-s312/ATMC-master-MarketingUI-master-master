@model MarketingServiceRequests.Models.ServiceDetails

@{
    ViewBag.Title = "ServiceDetail";

}

    <head>
        <link href="~/Content/servicedetailcss.css" rel="stylesheet" />
        @*<script src="~/Scripts/jquery-1.10.2.min.js"></script>
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@


        <style>

        </style>
        <script>

            $(document).ready(function () {
                $('input[type=submit]').prop("disabled", false);


                $("#Sponsors_link").on('click', function (e) {
                    e.preventDefault();
                    $("#Sponsors_input:hidden").trigger('click');

                });

                $("#approvedbudgetfrommanagement_link").on('click', function (e) {
                    e.preventDefault();
                    $("#Approved_input:hidden").trigger('click');
                });


                $('#Sponsors_input').change(function (e) {
                    var FileName = e.target.files[0].name;
                    $('#Sponsors_span').html(FileName);
                });
                $('#Approved_input').change(function (e) {
                    var FileName = e.target.files[0].name;
                    $('#Approved_span').html(FileName);
                });

                var chkboxes1 = $('.chkbox');
                var chkboxes2 = $('.chkcostctr');



                $('.chkbox').on('change', function () {
                    //$('.chkbox').not(this).prop('checked', false);

                    debugger;
                    if (chkboxes1.filter(':checked').length > 0) {
                        if (!chkboxes1.filter(':checked').length + !chkboxes2.filter(':checked').length == 0) {

                            if ($('#Sponsor').prop('checked') == true) {
                                if ($('#Sponsors_input')[0].files.length != 0) {
                                    $('input[type=submit]').prop('disabled', false);
                                }
                                else { $('input[type=submit]').prop('disabled', false); }
                            }
                            if ($('#approvedbudget').prop('checked') == true) {
                                if ($('#Approved_input')[0].files.length != 0) {
                                    $('input[type=submit]').prop('disabled', false);
                                }
                                else { $('input[type=submit]').prop('disabled', false); }
                            }


                        }
                    } else { $('input[type=submit]').prop('disabled', false); }
                });



                $('.chkcostctr').on('change', function () {
                    $('.chkcostctr').not(this).prop('checked', false);
                    $('input[type="file"]').val('');
                    $('#Sponsors_span').html('');
                    $('#Approved_span').html('');
                    $('input:submit').attr('disabled', false);
                });



                //$('input[type="checkbox"]').on('change', function () {
                //    $('input[type=submit]').prop('disabled', !chkboxes1.filter(':checked').length + !chkboxes2.filter(':checked').length);
                //}).trigger('change');


                $('input[type="file"]').change(function () {

                    //because this is single file upload I use only first index
                    var f = this.files[0]

                    //33554432 32 mb 32*1024*1024
                    if (f.size > 33554432) {
                        alert("Allowed file size exceeded. (Max. 32 MB)")
                        this.value = null;
                        var InputId = $(this).attr("id");
                        var SpanId = '#' + InputId.substring(0, InputId.length - 5) + 'span';
                        $(SpanId).html('');
                        //$('input:submit').attr('disabled', true);
                    }

                    if (!chkboxes1.filter(':checked').length + !chkboxes2.filter(':checked').length == 0) {
                        if ($('#Sponsor').prop('checked') == true) {
                            if ($('#Sponsors_input')[0].files.length != 0) {
                                $('input[type=submit]').prop('disabled', false);
                            }
                            else {
                                $('input[type=submit]').prop('disabled', false
                                );
                            }
                        }
                        if ($('#approvedbudget').prop('checked') == true) {
                            if ($('#Approved_input')[0].files.length != 0) {
                                $('input[type=submit]').prop('disabled', false);
                            }
                            else { $('input[type=submit]').prop('disabled', false); }
                        }
                    }

                });



            });
        </script>
    </head>

@using (Html.BeginForm("servicedetail", "Servicedetails", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container">
            <a class="navbar-brand" href="#">
                <img class="logo" src="~/Images/logo.jpg" alt="" />

            </a>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <div class="dropdown">
                            <a class="nav-link" href="#">
                                @{
                                    if (Session["UserName"] != null)
                                    {
                                        @Session["UserName"]
                                    }
                                } <span class="fa fas fa-angle-down ml-3 mt-3"></span>
                                
                            </a>
                            <div class="dropdown-content">
                                @Html.ActionLink("Logout", "LogOut", "Login")
                            </div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div>
        <div class="breadcrumb">
            <div class="breadcrumb-item"><a href="#">Home</a></div>
            <span class="fa fas fa-chevron-circle-right mt-1 mr-3 ml-3"></span>
            <div class="breadcrumb-item active" aria-current="page">New Services</div>
        </div>
    </div>
    <div class="border">
        <div class="wrapper">
            <div id="pointer1">
                <p id="step1" class="step">Service Detail</p>
            </div>
            
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card">
            <div class="card-body">
                <div class="container">
                    <div class="row">
                        <div class="col-4">
                            <div>
                                <div class="column-division">
                                    <div>
                                        @Html.Label("Title")
                                    </div>
                                    <div class="input-group mb-3">
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new {  @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="column-division">
                                    <div>
                                        @Html.Label("Business Objective")
                                    </div>
                                    <div class="input-group mb-3">
                                        @Html.EditorFor(model => model.BusinessObjective, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BusinessObjective, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="column-division">
                                    <div>
                                        @Html.Label("Desired Launch Date")
                                    </div>
                                    <div class="input-group mb-3">
                                        @Html.EditorFor(model => model.DesiredLaunchDate, new { htmlAttributes = new { @Value = "DD, MM, yy", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DesiredLaunchDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-8">
                            <div class="column-division column-two-division">
                                <div class="target-label">
                                    @Html.Label("Target Audience")
                                </div>
                                <div>
                                    <div class="form-check form-check-inline">
                                        @Html.CheckBox("Public", false)<span style="padding:0 10px 0 0px">Public</span>
                                        @Html.CheckBox("IMCPatients", false) <span style="padding:0 10px 0 0px"> IMC Patients </span>
                                        @Html.CheckBox("IMCEmployees", false) <span style="padding:0 10px 0 0px"> IMC Employees </span>
                                        @Html.CheckBox("Other", false)<span style="padding:0 10px 0 0px">Others</span>
                                    </div>

                                    @Html.ValidationMessageFor(model => model.TargetAudience, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="column-division column-two-division">
                                <div>
                                    @Html.Label("Cost Center")
                                </div>
                                <div>
                                    

                                        <div class="form-check form-check-inline">

                                            @Html.CheckBox("Sponsor", false, new { @class = "chkcostctr", })<span > Sponsors</span>
                                            <input type="file" name="Sponsors" id="Sponsors_input" />
                                            <a href="" id="Sponsors_link" style="padding:0 10px 0 10px"> (Attach Letters) </a>
                                            <span id="Sponsors_span"></span>
                                        </div>

                                        @Html.ValidationMessageFor(model => model.CostCenter, "", new { @class = "text-danger" })
                                  

                                    <div class="form-check form-check-inline">
                                        
                                            @Html.CheckBox("approvedbudget", false, new { @class = "chkcostctr", })<span>Approved budget from management</span>
                                            <input type="file" name="approvedbudgetfrommanagement" id="Approved_input" />
                                            <a href="" id="approvedbudgetfrommanagement_link" style="padding:0 10px 0 10px"> (Attach Approval) </a>
                                            <span id="Approved_span"></span>
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <input type="submit" value="Next" id="btnsubmit" class="btn" />
            </div>
        </div>

        </div>

        }
